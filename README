INSTALLATION

These instructions will change as we build the data and the server.

If you are running a Debian-derived distribution, preferably Ubuntu 13.10,
Saucy Salamander, you can run the following on the command line:

    make prereqs
    make all

The "all" target in the Makefile does all the hard work. It imports
and populates all the data, and it will overwrite existing data if
you run it again. This is dangerous in production, of course,
but it's OK for the moment.

Now you should have a mostly populated PostgreSQL database with
a lot of data in place. You also have nginx, PostgreSQL, and uwsgi
installed, but unconfigured.

We have all the rail and port data importing now. Remaining are:

    - Target warehouses
    - original data

OVERVIEW

We have four major data layers we want:

    - rail
    - ports
    - warehouses
    - roads/highways

And we want them in North America:

    - USA
    - Mexico
    - Canada

North American port data comes from:

    - http://msi.nga.mil/MSISiteContent/StaticFiles/NAV_PUBS/WPI/WPI_Shapefile.zip

North American rail data comes from:

    - http://cta.ornl.gov/transnet/qc28R.zip
    - http://cta.ornl.gov/transnet/qn28V.zip
    - http://cta.ornl.gov/transnet/wconv.txt
    - http://cta.ornl.gov/transnet/QNdata.zip

North American warehouse data is currently restricted only to Target and Walmart
distribution centers, and it comes from:

    - http://www.mwpvl.com/html/walmart.html
    - https://corporate.target.com/_ui/js/main.comb.xml

The shapefiles are imported directly into a PostGIS-enabled
database. Other data sources are imported into the same database
after being prepared/mangled/reformatted. Once all the data is in
the database, we make new tables in that database by joining and
selecting from the raw data tables. This produces the set of tables
that our application, finally, consumes.

The visualization will be done in d3 or leaflet using GeoJSON to render
each layer.


ARCHITECTURE

We will be running two uwsgi app servers behind nginx:

    - TileStache (http://tilestache.org/)
        uwsgi will serve a TileStache app for the vector tiles.
    - EmpireLogistics
        uwsgi will serve a PSGI app for the main application.

The database server is PostgreSQL 9.3 with PostGIS extensions.

We will cache vector tiles in redis.
