{
    "cache": {
        "name": "Disk",
        "path": "/var/local/EmpireLogistics/shared/tiles",
        "dirs": "portable",
        "gzip": []
    },
    "logging": "warning",
    "layers": {
        "rail_lines": {
            "allowed origin": "*",
            "provider": {
                "class": "TileStache.Goodies.VecTiles:Provider",
                "kwargs": {
                    "clip": true,
                    "dbinfo": {
                        "host": "localhost",
                        "database": "empirelogistics",
                        "user": "el"
                    },
                    "queries": [
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 5",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 4",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 3",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 2",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 1",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 0",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name",
                        "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, rl.subdivision from rail_line rl join rail_density td on rl.traffic_density = td.detail join rail_ownership ro on rl.owner1 = ro.name"
                    ]
        }}},
        "rail_interlines": {
            "allowed origin": "*",
            "provider": {
                "class": "TileStache.Goodies.VecTiles:Provider",
                "kwargs": {
                    "clip": true,
                    "dbinfo": {
                        "host": "localhost",
                        "database": "empirelogistics",
                        "user": "el"
                    },
                    "queries": [
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
                        "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri"
                    ]
        }}},
        "rail_nodes": {
            "allowed origin": "*",
            "provider": {
                "class": "TileStache.Goodies.VecTiles:Provider",
                "kwargs": {
                    "clip": true,
                    "dbinfo": {
                        "host": "localhost",
                        "database": "empirelogistics",
                        "user": "el"
                    },
                    "queries": [
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 3",
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 2",
                        "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 1",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node",
                        "select name, incident_links, geometry as __geometry__ from rail_node"
                    ]
        }}},
        "warehouses": {
            "allowed origin": "*",
            "provider": {
                "class": "TileStache.Goodies.VecTiles:Provider",
                "kwargs": {
                    "clip": true,
                    "dbinfo": {
                        "host": "localhost",
                        "database": "empirelogistics",
                        "user": "el"
                    },
                    "queries": [
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse",
                        "select geometry as __geometry__, city, state, postal_code, country, description, area, owner, date_opened from warehouse"
                    ]
        }}}
    }
}
