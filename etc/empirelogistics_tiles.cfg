{
  "layers": {
    "warehouses": {
      "provider": {
        "kwargs": {
          "queries": [
            "select a.id, w.geometry as __geometry__, coalesce(w.name,'Unknown') as name, a.street_address, a.city, a.state, a.postal_code, a.country, w.description, coalesce(to_char(w.area, 'FM999,999,999'), 'Unknown') as area, coalesce(initcap(wo.name),'Unknown') as owner, extract(year from w.date_opened) as year_opened from warehouse w left outer join warehouse_owner wo on w.owner = wo.id left outer join warehouse_address wa on w.id = wa.warehouse left outer join address a on a.id = wa.address"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "cache lifespan": 604800,
      "maximum cache age": 604800
    },
    "ports": {
      "provider": {
        "kwargs": {
          "queries": [
            "select distinct on (p.id) p.id, p.geometry as __geometry__, initcap(p.port_name) as name, p.harbor_size, initcap(p.shelter), p.cargo_pier_depth, p.oil_terminal_depth, p.max_vessel_size, pt.year, coalesce(to_char(pt.domestic_tonnage, 'FM999,999,999'), 'Unknown') as domestic_tonnage, coalesce(to_char(pt.foreign_tonnage, 'FM999,999,999'), 'Unknown') as foreign_tonnage, coalesce(to_char(pt.import_tonnage, 'FM999,999,999'), 'Unknown') as import_tonnage, coalesce(to_char(pt.export_tonnage, 'FM999,999,999'), 'Unknown') as export_tonnage, coalesce(to_char(pt.total_tonnage, 'FM999,999,999'), 'Unknown') as total_tonnage, m.uuid as media from port p left outer join port_tonnage pt on p.id = pt.port where pt.year = (select max(year) from port_tonnage) or pt.year is null left outer join port_media pm on p.id = pm.port left outer join media m on pm.media = m.id"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "cache lifespan": 604800,
      "maximum cache age": 604800
    },
    "rail_nodes": {
      "provider": {
        "kwargs": {
          "queries": [
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 3",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 3",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 2",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 2",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 1",
            "select id, name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 1",
            "select id, name, incident_links, geometry as __geometry__ from rail_node"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "cache lifespan": 604800,
      "maximum cache age": 604800
    },
    "rail_interlines": {
      "provider": {
        "kwargs": {
          "queries": [
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.id, ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "cache lifespan": 604800,
      "maximum cache age": 604800
    },
    "rail_lines": {
      "provider": {
        "kwargs": {
          "queries": [
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 5",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 4",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 3",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 2",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 1",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 0",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.id, rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision, rl.status as status, rl.military_subsystem as military_subsystem, rl.direction as direction from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "cache lifespan": 604800,
      "maximum cache age": 604800
    }
  },
  "logging": "warning",
  "cache": {
    "gzip": [],
    "dirs": "portable",
    "path": "/var/local/EmpireLogistics/shared/tiles",
    "name": "Disk"
  }
}
