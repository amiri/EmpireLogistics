{
  "layers": {
    "warehouses": {
      "provider": {
        "kwargs": {
          "queries": [
            "select ST_Transform(geometry, 900913) as __geometry__, coalesce(name,'Unknown') as name, city, state, postal_code, country, description, coalesce(to_char(area, 'FM999,999,999'), 'Unknown') as area, coalesce(initcap(warehouse.owner::text),'Unknown') as owner, extract(year from date_opened) as year_opened from warehouse"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "allowed origin": "*"
    },
    "ports": {
      "provider": {
        "kwargs": {
          "queries": [
            "select geometry as __geometry__, initcap(port_name) as name, harbor_size, initcap(shelter), cargo_pier_depth, oil_terminal_depth, max_vessel_size from port"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "allowed origin": "*"
    },
    "rail_nodes": {
      "provider": {
        "kwargs": {
          "queries": [
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 6",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 5",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 4",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 3",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 3",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 2",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 2",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 1",
            "select name, incident_links, geometry as __geometry__ from rail_node where incident_links >= 1",
            "select name, incident_links, geometry as __geometry__ from rail_node"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "allowed origin": "*"
    },
    "rail_interlines": {
      "provider": {
        "kwargs": {
          "queries": [
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri",
            "select ri.forwarding_node, ri.receiving_node, ri.forwarding_node_owner, ri.receiving_node_owner, ri.junction_code, ri.impedance, ST_Transform(ri.geometry, 900913) as __geometry__ from rail_interline ri"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "allowed origin": "*"
    },
    "rail_lines": {
      "provider": {
        "kwargs": {
          "queries": [
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner, ro.reporting_mark as reporting_mark, rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 5",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 4",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 3",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 2",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 1",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name where td.name::integer >= 0",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name",
            "select rl.geometry as __geometry__, rl.route_id as name, rl.owner1 as owner,  ro.reporting_mark as reporting_mark,rl.miles, td.name as traffic_density, td.detail as traffic_density_detail, rl.subdivision from rail_line rl left outer join rail_density td on rl.traffic_density = td.detail left outer join rail_ownership ro on rl.owner1 = ro.name"
          ],
          "dbinfo": {
            "user": "el",
            "database": "empirelogistics",
            "host": "localhost"
          },
          "clip": true
        },
        "class": "TileStache.Goodies.VecTiles:Provider"
      },
      "allowed origin": "*"
    }
  },
  "logging": "warning",
  "cache": {
    "gzip": [],
    "dirs": "portable",
    "path": "/var/local/EmpireLogistics/shared/tiles",
    "name": "Disk"
  }
}
